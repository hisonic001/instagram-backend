// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// User 정보 수집 항목
// username과 이메일은 unique 설정
model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String?
  userName  String   @unique
  email     String   @unique
  password  String
  bio       String? // for editProfile
  avatar    String? // for editProfile, image
  // follower와 following을 서로 relation으로 묶음
  // self referencing relationship 같은 relation name & references
  // follwer와 following은 User의 Array
  follower  User[]   @relation("FollowRelation", references: [id])
  following User[]   @relation("FollowRelation", references: [id])
  likes     Like[]
  photos    Photo[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Photo {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  // 실제로 user가 db에 저장되는 않고 relation만 연결됨
  userId    Int
  file      String
  caption   String?
  hashtags  Hashtag[]
  likes     Like[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Hashtag {
  id        Int      @id @default(autoincrement())
  hashtag   String   @unique
  photos    Photo[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Like {
  id        Int      @id @default(autoincrement())
  photo     Photo    @relation(fields: [photoId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  photoId   Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 두개의 data set들을 combine하여 unique하게
  @@unique([photoId, userId])
}
