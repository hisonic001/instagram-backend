divide by the roles{
    server 파일에 너무 다양한 목적의 코드들이 산재하여 있으므로
    나눠서 파일을 생성

    client
    schema{
        typeDefs,
        queries,
        mutations,
}

merging files{
    나눈 후 grapgql-tools를 통해서 schema file에 다시 merge
    npm i graphql-tools

    1. loadFilesSync()로 파일들 찾기
    ex) const loadedFiles = 
    loadFilesSync(`${__dirname}/schema/**/*.graphql`);
    디렉토리 -> schema/모든폴더/모든파일.끝확장자가 graphql인 파일들만
    
    load는 export default된 인자를 바탕으로 가져온다.

    glob -> pattern languege{ 
        ** //inside of every folders
        * //any files
        .{}.{} //확장자 및 이름
    }

    2. mergerTypeDefs()나 mergeResolvers()로 merging
    
    3. 스키마 생성 
    const schema = makeExcutableSchema({typeDefs,resolvers})
}   

가상환경 설정{
    가상환경에서 .env파일을 읽을 수 있도록 설정

    npm i dotenv -> env 읽기 위해 설치
    사용시에는 다른 import 이전에 코드 최상단에 위치

    import와 동시에 실행시키는 방법은
    require("dotenv").config();
    
}